searchState.loadedDescShard("papergrid", 0, "Papergrid is a library for generating text-based tables.\nA module which contains <code>ANSIFmt</code> trait and its …\nA module which contains Colors trait and its blanket …\nA module which contains a general settings which might be …\nThe module contains an <code>Dimension</code> trait and its …\nModule contains a list of backends for pretty print tables.\nThe module contains a Records abstraction of a <code>Grid</code> trait …\nA module contains utility functions which grid relay on.\nThe structure represents a ANSI color by suffix and prefix.\nA trait which prints an ANSI prefix and suffix.\nThe structure represents a ANSI color by suffix and prefix.\nGets a reference as a color.\nConstructs a new instance with suffix and prefix set to …\nPrint ANSI prefix.\nPrint ANSI suffix.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a reference to a prefix.\nGets a reference to a prefix.\nGets a reference to a suffix.\nGets a reference to a suffix.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks whether the color is not actually set.\nVerifies if anything was actually set.\nConstructs a new instance with suffix and prefix.\nConstructs a new instance with suffix and prefix.\nColor implementation.\nA trait which represents map of colors.\nA color which is actually has not value.\nThe structure represents empty <code>Colors</code> map.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a color for a given position.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nVerifies whether a map is empty or not.\n<code>AlignmentHorizontal</code> represents an horizontal alignment of …\n<code>AlignmentVertical</code> represents an vertical alignment of a …\nBorder is a representation of a cells’s borders (left, …\nBorders represents a Table frame with horizontal and …\nAlign to the bottom.\nA particular cell (row, column) on the grid.\nAlign to the center.\nAlign to the center.\nAll cells in a column on the grid.\nEntity a structure which represent a set of cells.\nAn iterator over cells.\nFormatting represent a logic of formatting of a cell.\nAll cells on the grid.\nA structure for a custom horizontal line.\nIndent represent a filled space.\nAlign on the left.\nPosition is a (row, col) position on a Grid.\nAlign on the right.\nAll cells in a row on the grid.\nA structure which represents 4 box sides.\nAlign to the top.\nA structure for a vertical line.\nAn setting to allow alignment per line.\nA character for a bottom.\nA bottom horizontal on the frame.\nBottom side.\nRight intersection character.\nA bottom horizontal intersection on the frame.\nA bottom left on the frame.\nA bottom right on the frame.\nCopies the underlying reference to a new border.\nA module which contains configuration of a <code>CompactGrid</code> …\nConvert all values on the border into another ones.\nConverts borders type into another one.\nCreates a new object.\nCopies the underlying reference to a new border.\nThis function constructs a cell borders with all sides …\nReturns empty borders.\nCreates a new line.\nCreates a new line.\nA fill character.\nThis function constructs a cell borders with all sides’s …\nReturns Borders filled in with a supplied value.\nCreates a new line.\nCreates a new object.\nCreates a new line.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThis function constructs a cell borders with all sides set.\nCreates a new line.\nCreates a new line.\nVerifies whether anything is set on the bottom.\nVerifies if borders has bottom line set on the frame.\nVerifies if borders has horizontal lines set.\nVerifies whether anything is set on the left.\nVerifies if borders has left line set on the frame.\nVerifies whether anything is set on the right.\nVerifies if borders has right line set on the frame.\nVerifies whether anything is set on the top.\nVerifies if borders has top line set on the frame.\nVerifies if borders has vertical lines set.\nA horizontal split.\nAn setting to allow horizontal trim.\nA top left character on the frame.\nLine intersection character.\nLine intersection character.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks whether any side is set.\nA verification whether any border was set.\nVerifies if the line has any setting set.\nVerifies if the line has any setting set.\nIterate over cells which are covered via the <code>Entity</code>.\nA character for a left.\nA vertical split on the left frame line.\nLeft intersection character.\nLeft side.\nA character for a left bottom corner.\nA horizontal split on the left frame line.\nA character for a left top corner.\nLine character.\nLine character.\nThis function constructs a cell borders with all sides set.\nCreates a new <code>Formatting</code> structure.\nCreates a new line.\nCreates a new Indent structure.\nCreates a new object.\nCreates a new line.\nA character for a right.\nA vertical split on the right frame line.\nRight intersection character.\nRight side.\nA character for a right bottom corner.\nA horizontal split on the right frame line.\nA character for a right top corner.\nA number of repeats of a fill character.\nCreates a new Indent structure with space (<code>&#39; &#39;</code>) as a fill …\nA module which contains configuration options for a <code>Grid</code>.\nA character for a top.\nA top horizontal on the frame.\nTop side.\nLeft intersection character.\nA top horizontal intersection on the frame.\nA top left on the frame.\nA top right on the frame.\nA vertical split.\nAn setting to allow vertical trim.\nCreates a new Indent structure with space (<code>&#39; &#39;</code>) as a fill …\nThis structure represents a settings of a grid.\nReturns the argument unchanged.\nGet a alignment horizontal.\nReturns a current <code>Borders</code> structure.\nReturns a current <code>Borders</code> structure.\nReturns a grid margin.\nReturns a margin color.\nGet a padding for a given.\nSet a padding to a given cells.\nCalls <code>U::from(self)</code>.\nReturns an standard config.\nSet a horizontal alignment.\nSet the <code>Borders</code> value as correct one.\nSets colors of border carcass on the grid.\nSet grid margin.\nSet colors for a margin.\nSet a padding to a given cells.\nSet a padding to a given cells.\nAn offset from the start.\nAn offset from the end.\nA structure to keep information for <code>Entity</code> as a key.\nThe structure represents an offset in a text.\nThis structure represents a settings of a grid.\nCalculates an amount of horizontal lines would present on …\nCalculates an amount of vertical lines would present on …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a value for an <code>Entity</code>.\nGet a horizontal alignment for a given Entity.\nGet a vertical alignment for a given Entity.\nReturns a border of a cell.\nReturns a border color of a cell.\nGets a color of all borders on the grid.\nGets a global border value if set.\nReturns a current <code>Borders</code> structure.\nGet a character which will be used in case any …\nGets colors of a borders carcass on the grid.\nGet a span value of the cell, if any is set.\nGet a span value of the cell, if any is set.\nGet a formatting settings for a given Entity.\nGets a horizontal character which would be rendered on the …\nGets a color of a cell horizontal.\nGets a overridden line.\nGets all overridden lines.\nGets an intersection character which would be rendered on …\nGets a color of a cell vertical.\nGet a justification which will be used while expanding …\nGet a justification color which will be used while …\nReturns a margin value currently set.\nReturns a margin color value currently set.\nReturns a margin offset value currently set.\nGet a padding for a given Entity.\nGet a padding color for a given Entity.\nGet a span value of the cell, if any is set.\nGet a span value of the cell, if any is set.\nGets a vertical character which would be rendered on the …\nGets a color of a cell vertical.\nGets a overridden vertical line.\nGets all overridden vertical lines.\nVerifies if there’s any custom alignment horizontal set.\nVerifies if there’s any custom alignment vertical set.\nVerifies if there’s any colors set for a borders.\nVerifies if there’s any spans set.\nVerifies if there’s any custom formatting set.\nChecks if grid would have a horizontal border with the …\nVerifies if there’s any colors set for a borders.\nVerifies if there’s any colors set for a borders.\nVerifies if there’s any custom padding set.\nVerifies if there’s any custom padding set.\nVerifies if there’s any spans set.\nChecks if grid would have a vertical border with the …\nSet a value for an <code>Entity</code>.\nSet the border line by row index.\nSet the border line by column index.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe function checks if a cell is hidden indirectly because …\nThe function checks if a cell is hidden because of a …\nThe function checks if a cell is hidden because of a row …\nThe function returns whether the cells will be rendered or …\nVerifies whether anything was set beside a global entry.\nChecks if there any char in a horizontal border being …\nChecks if there any char in a horizontal border being …\nGet a list of overridden chars in a horizontal border.\nGet a overridden color in a horizontal border.\nGet a list of overridden chars in a horizontal border.\nGet a overridden color in a vertical border.\nCreates an empty <code>EntityMap</code>.\nRemoves a value for an <code>Entity</code>.\nSets off all borders possible on the <code>Entity</code>.\nGets a color of border of a cell on the grid.\nRemoves border changes.\nRemoves border changes.\nRemoves border changes.\nRemoves border changes.\nRemoves column spans.\nRemoves border changes.\nSets off the border line by row index if any were set\nRemoves a list of overridden chars in a horizontal border.\nRemoves a list of overridden chars in a horizontal border.\nRemoves row spans.\nRemoves border changes.\nSets off the border line by column index if any were set\nSet a horizontal alignment to a given cells.\nSet a vertical alignment to a given cells.\nSet border set a border value to all cells in <code>Entity</code>.\nSets a color of border of a cell on the grid.\nSets a color of all borders on the grid.\nSet the all <code>Borders</code> values to a char.\nSet the <code>Borders</code> value as correct one.\nSets colors of border carcass on the grid.\nSet a character which will be used in case any …\nSet a column span to a given cells.\nSet a formatting to a given cells.\nOverride a character on a horizontal line.\nOverride a character color on a horizontal line.\nSet a justification which will be used while expanding …\nSet a justification color which will be used while …\nSet a margin of a grid.\nSet a color of margin of a grid.\nSet an offset of margin of a grid.\nSet a padding to a given cells.\nSet a padding to a given cells.\nSet a column span to a given cells.\nOverride a vertical split line.\nOverride a character color on a vertical line.\nDimension of a <code>Grid</code>\nDimension estimation of a <code>Grid</code>\nThe module contains a <code>CompactGridDimension</code> for <code>CompactGrid</code> …\nEstimates a metric.\nGet a row height by index.\nGet a column width by index.\nThe module contains a <code>SpannedGridDimension</code> for <code>Grid</code> …\nThe module contains a <code>SpannedVecRecordsDimension</code> for <code>Grid</code> …\nA <code>Dimension</code> implementation which calculates exact …\nCalculates dimensions of columns.\nReturns the argument unchanged.\nCalculates height of rows.\nCalls <code>U::from(self)</code>.\nCalculates width of columns.\nA <code>Dimension</code> implementation which calculates exact …\nReturns the argument unchanged.\nReturn width and height lists.\nCalculates height of rows.\nCalculates height of rows.\nCalls <code>U::from(self)</code>.\nCalculates width of columns.\nCalculates width of columns.\nA <code>Dimension</code> implementation which calculates exact …\nReturns the argument unchanged.\nReturn width and height lists.\nCalculates height of rows.\nCalls <code>U::from(self)</code>.\nCalculates width of columns.\nThe module contains a <code>CompactGrid</code> structure, which is a …\nThe module contains a <code>Grid</code> structure.\nThe module contains a <code>PeekableGrid</code> structure.\nGrid provides a set of methods for building a text-based …\nBuilds a table.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe new method creates a grid instance with default styles.\nBuilds a table into string.\nSets colors map.\nGrid provides a set of methods for building a text-based …\nBuilds a table.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe new method creates a grid instance with default styles.\nBuilds a table into string.\nGrid provides a set of methods for building a text-based …\nBuilds a table.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe new method creates a grid instance with default styles.\nBuilds a table into string.\nA string representation of a <code>Grid</code> cell.\n<code>Records</code> extension which guarantees the amount of rows.\nThe representation of data, rows and columns of a <code>Grid</code>.\nIterator which goes over rows.\nCell iterator inside a row.\nA Records implementation for any IntoIterator.\nRows iterator.\nThe representation of data, rows and columns of a grid.\nRecords represents table data.\nReturns count of columns in the records.\nReturns an amount of lines of a text of a cell by an index.\nReturns an amount of lines of a text of a cell by an index.\nReturns an exact amount of rows in records.\nReturns the argument unchanged.\nReturns a line of a text of a cell by an index.\nReturns a line of a text of a cell by an index.\nReturns a width of line of a text of a cell by an index.\nReturns a width of line of a text of a cell by an index.\nReturns a text of a cell by an index.\nReturns a width of a text of a cell by an index.\nReturns a width of a text of a cell by an index.\nHint amount of rows in the records.\nCalls <code>U::from(self)</code>.\nReturns an iterator over rows.\nReturns a iterator over rows.\nReturns a new IterRecords object.\nModule contains <code>VecRecords</code>.\nCell implementation which can be used with <code>VecRecords</code>.\nStrWithWidth is a structure is responsible for a string …\nThe struct is a Cell implementation which keeps width …\nA Records implementation based on allocated buffers.\nReturns a number of lines cell has.\nCreates a new instance of the structure with a single line.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn a original text value.\nGets a line by index.\nReturns a width of cell line.\nCreates a new instance of the structure.\nCreates a new object.\nCreates new <code>VecRecords</code> structure.\nGets a text.\nReturns a width of cell.\nThis module contains a different functions which are used …\nIterator over lines.\nCalculates a number of lines.\nReturns a list of tabs (<code>\\t</code>) in a string..\nReturns the argument unchanged.\nReturns a char width.\nReturns a string width.\nSplits the string by lines.\nReturns a string width (accouting all characters).\nReturns string width and count lines of a string. It’s a …\nReturns a max string width of a line.\nCalls <code>U::from(self)</code>.\nReplaces tabs in a string with a given width of spaces.")