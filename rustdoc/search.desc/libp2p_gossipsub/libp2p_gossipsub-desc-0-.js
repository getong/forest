searchState.loadedDescShard("libp2p_gossipsub", 0, "Implementation of the Gossipsub protocol.\nThe message is considered valid, and it should be …\nAllows all subscriptions\nMessage signing is disabled.\nThis setting requires the author, sequence number and …\nMessage signing is disabled.\nNetwork behaviour that handles the gossipsub protocol.\nCombines two subscription filters\nConfiguration parameters that define the performance of …\nThe builder struct for constructing a gossipsub …\nError associated with Config building.\nA general trait of transforming a <code>RawMessage</code> into a <code>Message</code>…\nThis message has already been published.\nThe sequence number was empty, expected a value.\nEvent that can be emitted by the gossipsub behaviour.\nA peer that does not support gossipsub has connected.\nA generic trait that can be extended for various hashing …\nHistory length less than history gossip length.\nThe default transform, the raw data is propagated as is to …\nThe message is neither delivered nor forwarded to the …\nThere were no peers to send this message to.\nThe PeerId was invalid\nInvalid protocol\nThe sequence number was the incorrect size\nThe message has an invalid signature,\nAdds a max count to a given subscription filter\nMaximum transmission size is too small.\nThe inequality doesn’t hold mesh_outbound_min &lt;= …\nThe ineauality doesn’t hold mesh_outbound_min &lt;= …\nThe message sent to the user after a <code>RawMessage</code> has been …\nA message has been received.\nValidation kinds from the application for received …\nDetermines if published messages should be signed or not.\nMessage source existed when validation has been sent to …\nThe overall message was too large. This could be due to …\nThis setting does not check the author, sequence number or …\nWe are not allowed to subscribe to this topic by the …\nThis setting permits messages that have no author, …\nError associated with publishing a gossipsub message.\nCouldn’t publish our subscription\nMessage signing is disabled.\nA message received by the gossipsub system and stored …\nA subscription filter that filters topics based on a …\nThe message is considered invalid, and it should be …\nSequence number existed when validation has been sent to …\nSignature existed when validation has been sent to …\nMessage signing is enabled. The author will be the owner …\nAn error occurred whilst signing the message.\nThis is the default setting. This requires the message …\nA remote subscribed to a topic.\nError associated with subscribing to a topic.\nA gossipsub topic.\nThe compression algorithm failed.\nThe data transformation failed.\nunsubscribe_backoff is zero\nA remote unsubscribed from a topic.\nThe types of message validation that can be employed by …\nSelector for custom Protocol Id\nAllows only whitelisted subscriptions\nThe score threshold below which px will be ignored; this …\nAdds a new peer to the list of explicitly connected peers.\nLists all known peers and their associated subscribed …\nReturns true iff we allow an incoming subscription. This …\nReturns true iff we allow an incoming subscription. This …\nBy default, gossipsub will reject messages that are sent …\nBy default, gossipsub will reject messages that are sent …\nP5: Application-specific peer scoring\nNumber of heartbeat slots considered as slack for …\nNumber of heartbeat slots considered as slack for …\nP7: behavioural pattern penalties. This parameter has an …\nBlacklists a peer. All messages from this peer will be …\nCreate buckets for the score histograms based on score …\nConstructs a <code>Config</code> from the given configuration and …\nReturns true iff the topic is of interest and we can …\nThe number of heartbeat ticks until we recheck the …\nThe number of heartbeat ticks until we recheck the …\nList of Gossipsub control messages.\nContent of the message. Its meaning is out of scope of …\nContent of the message.\nThe decay interval for parameter counters.\nCounter value below which it is considered 0.\nEnables Peer eXchange. This should be enabled in …\nWhether Peer eXchange is enabled; this should be enabled …\nDuplicates are prevented by storing message id’s of …\nDuplicates are prevented by storing message id’s of …\nTime to live for fanout peers (default is 60 seconds).\nTime to live for fanout peers (default is 60 seconds).\nFilters a set of deduplicated subscriptions By default …\nFilters a set of deduplicated subscriptions By default …\nFilters a list of incoming subscriptions and returns a …\nFilters a list of incoming subscriptions and returns a …\nP2: first message deliveries This is the number of message …\nWhether to do flood publishing or not. If enabled newly …\nWhether to do flood publishing or not. If enabled newly …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a scoring parameters for a topic if existent.\nAffects how many peers we will emit gossip to at each …\nAffects how many peers we will emit gossip to at each …\nMinimum number of peers to emit gossip to during a …\nMinimum number of peers to emit gossip to during a …\nControls how many times we will allow a peer to request …\nControls how many times we will allow a peer to request …\nThe score threshold below which gossip propagation is …\nIf a GRAFT comes before <code>graft_flood_threshold</code> has elapsed …\nIf a GRAFT comes before <code>graft_flood_threshold</code> has elapsed …\nThe score threshold below which message processing is …\nThe function that takes a topic string and creates a topic …\nInitial delay in each heartbeat (default is 5 seconds).\nInitial delay in each heartbeat (default is 5 seconds).\nTime between each heartbeat (default is 1 second).\nTime between each heartbeat (default is 1 second).\nNumber of past heartbeats to gossip about (default is 3).\nNumber of past heartbeats to gossip about (default is 3).\nNumber of heartbeats to keep in the <code>memcache</code> (default is …\nNumber of heartbeats to keep in the <code>memcache</code> (default is …\nTakes a <code>RawMessage</code> received and converts it to a <code>Message</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nP4: invalid messages This is the number of invalid …\nP6: IP-colocation factor. The parameter has an associated …\nReturns true if signing is enabled.\nTime to wait for a message requested through IWANT …\nTime to wait for a message requested through IWANT …\nThe public key of the message if it is signed and the …\nThe maximum number of messages to include in an IHAVE …\nThe maximum number of messages to include in an IHAVE …\nGossipSubMaxIHaveMessages is the maximum number of IHAVE …\nGossipSubMaxIHaveMessages is the maximum number of IHAVE …\nThe maximum number of messages we will process in a given …\nThe maximum number of messages we will process in a given …\nMesh topics are controlled by the user via subscriptions …\nThis provides an upper bound to the number of mesh topics …\nThe maximum byte size for each gossip (default is 2048 …\nThe maximum byte size for each gossipsub RPC (default is …\nP3b: sticky mesh propagation failures This is a sticky …\nP3: mesh message deliveries This is the number of message …\nTarget number of peers for the mesh network (D in the …\nTarget number of peers for the mesh network (D in the …\nMaximum number of peers in mesh network before removing …\nMaximum number of peers in mesh network before removing …\nMinimum number of peers in mesh network before adding more …\nMinimum number of peers in mesh network before adding more …\nMinimum number of outbound peers in the mesh network …\nMinimum number of outbound peers in the mesh network …\nLists all mesh peers for a certain topic hash.\nA user-defined function allowing the user to specify the …\nA user-defined function allowing the user to specify the …\nList of messages that were part of this RPC query.\nCreates a Gossipsub <code>Behaviour</code> struct given a set of …\nCreates a Gossipsub <code>Behaviour</code> struct given a set of …\nCreates a Gossipsub <code>Behaviour</code> struct given a set of …\nCreates a Gossipsub <code>Behaviour</code> struct given a set of …\nCreates a Gossipsub <code>Behaviour</code> struct given a set of …\nThe maximum number of new peers to graft to during …\nThe maximum number of new peers to graft to during …\nThe median mesh score threshold before triggering …\nNumber of heartbeat ticks that specify the interval in …\nNumber of heartbeat ticks that specify the interval in …\nTakes the data to be published (a topic and associated …\nLists all known peers and their associated protocol.\nReturns the gossipsub score for a given peer, if one …\nThe full protocol id to negotiate this protocol (does not …\nThe protocol id prefix to negotiate this protocol (default …\nControls the backoff time for pruned peers. This is how …\nControls the backoff time for pruned peers. This is how …\nControls the number of peers to include in prune Peer …\nControls the number of peers to include in prune Peer …\nPublishes a message with multiple topics to the network.\nThe score threshold below which we shouldn’t publish …\nPublished message ids time cache duration. The default is …\nPublished message ids time cache duration. The default is …\nCalculates the encoded length of this message (used for …\nRemoves a peer from the blacklist if it has previously …\nThis removes the peer from explicitly connected peers, …\nThis function should be called when …\nTime to remember counters for a disconnected peer.\nAffects how peers are selected when pruning a mesh due to …\nAffects how peers are selected when pruning a mesh due to …\nBuckets used for the score histograms.\nComputes the decay factor for a parameter, assuming the …\nComputes the decay factor for a parameter using base as …\nA random sequence number.\nA random sequence number.\nSets the application specific score for a peer. Returns …\nSets scoring parameters for a topic.\nThe signature of the message if it’s signed.\nId of the peer that published this message.\nId of the peer that published this message.\nSubscribe to a topic.\nList of subscriptions.\nEnable support for flooodsub peers.\nEnable support for flooodsub peers. Default false.\nP1: time in the mesh This is the time the peer has been …\nThe topic this message belongs to\nThe topic this message belongs to\nAggregate topic score cap; this limits the total …\nThe weight of the topic.\nLists the hashes of the topics we are currently subscribed …\nScore parameters per topic.\nUnsubscribes from a topic.\nControls the backoff time when unsubscribing from a topic.\nControls the backoff time when unsubscribing from a topic.\nWhen set, prevents automatic forwarding of all received …\nWhen set to <code>true</code>, prevents automatic forwarding of all …\nFlag indicating if this message has been validated by the …\nDetermines the level of validation used when receiving …\nDetermines the level of validation used when receiving …\nActivates the peer scoring system with the given …\nActivates the peer scoring system with the given …\nThe decompressed message itself.\nThe <code>MessageId</code> of the message. This should be referenced by …\nRemote that has subscribed.\nRemote that has unsubscribed.\nThe peer that forwarded us this message.\nThe topic it has subscribed to.\nThe topic it has subscribed from.")