(function() {var type_impls = {
"filecoin_proofs":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Proof%3CTree,+G%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/params.rs.html#242\">source</a><a href=\"#impl-Clone-for-Proof%3CTree,+G%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tree, G&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"storage_proofs_porep/stacked/vanilla/params/struct.Proof.html\" title=\"struct storage_proofs_porep::stacked::vanilla::params::Proof\">Proof</a>&lt;Tree, G&gt;<div class=\"where\">where\n    Tree: <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>,\n    G: <a class=\"trait\" href=\"filecoin_hashers/types/trait.Hasher.html\" title=\"trait filecoin_hashers::types::Hasher\">Hasher</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/params.rs.html#243\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"storage_proofs_porep/stacked/vanilla/params/struct.Proof.html\" title=\"struct storage_proofs_porep::stacked::vanilla::params::Proof\">Proof</a>&lt;Tree, G&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","filecoin_proofs::types::VanillaSealProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Proof%3CTree,+G%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/params.rs.html#209\">source</a><a href=\"#impl-Debug-for-Proof%3CTree,+G%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tree, G&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"storage_proofs_porep/stacked/vanilla/params/struct.Proof.html\" title=\"struct storage_proofs_porep::stacked::vanilla::params::Proof\">Proof</a>&lt;Tree, G&gt;<div class=\"where\">where\n    Tree: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>,\n    G: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"filecoin_hashers/types/trait.Hasher.html\" title=\"trait filecoin_hashers::types::Hasher\">Hasher</a>,\n    &lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.Hasher\" title=\"type filecoin_proofs::types::MerkleTreeTrait::Hasher\">Hasher</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    &lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.Arity\" title=\"type filecoin_proofs::types::MerkleTreeTrait::Arity\">Arity</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    &lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.SubTreeArity\" title=\"type filecoin_proofs::types::MerkleTreeTrait::SubTreeArity\">SubTreeArity</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    &lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.TopTreeArity\" title=\"type filecoin_proofs::types::MerkleTreeTrait::TopTreeArity\">TopTreeArity</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/params.rs.html#209\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","filecoin_proofs::types::VanillaSealProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Proof%3CTree,+G%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/params.rs.html#209\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Proof%3CTree,+G%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, Tree, G&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"storage_proofs_porep/stacked/vanilla/params/struct.Proof.html\" title=\"struct storage_proofs_porep::stacked::vanilla::params::Proof\">Proof</a>&lt;Tree, G&gt;<div class=\"where\">where\n    Tree: <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>,\n    G: <a class=\"trait\" href=\"filecoin_hashers/types/trait.Hasher.html\" title=\"trait filecoin_hashers::types::Hasher\">Hasher</a>,\n    <a class=\"struct\" href=\"filecoin_proofs/types/struct.MerkleProof.html\" title=\"struct filecoin_proofs::types::MerkleProof\">MerkleProof</a>&lt;G, <a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;&gt;: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    <a class=\"struct\" href=\"filecoin_proofs/types/struct.MerkleProof.html\" title=\"struct filecoin_proofs::types::MerkleProof\">MerkleProof</a>&lt;&lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.Hasher\" title=\"type filecoin_proofs::types::MerkleTreeTrait::Hasher\">Hasher</a>, &lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.Arity\" title=\"type filecoin_proofs::types::MerkleTreeTrait::Arity\">Arity</a>, &lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.SubTreeArity\" title=\"type filecoin_proofs::types::MerkleTreeTrait::SubTreeArity\">SubTreeArity</a>, &lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.TopTreeArity\" title=\"type filecoin_proofs::types::MerkleTreeTrait::TopTreeArity\">TopTreeArity</a>&gt;: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    <a class=\"struct\" href=\"storage_proofs_porep/stacked/vanilla/params/struct.ReplicaColumnProof.html\" title=\"struct storage_proofs_porep::stacked::vanilla::params::ReplicaColumnProof\">ReplicaColumnProof</a>&lt;<a class=\"struct\" href=\"filecoin_proofs/types/struct.MerkleProof.html\" title=\"struct filecoin_proofs::types::MerkleProof\">MerkleProof</a>&lt;&lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.Hasher\" title=\"type filecoin_proofs::types::MerkleTreeTrait::Hasher\">Hasher</a>, &lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.Arity\" title=\"type filecoin_proofs::types::MerkleTreeTrait::Arity\">Arity</a>, &lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.SubTreeArity\" title=\"type filecoin_proofs::types::MerkleTreeTrait::SubTreeArity\">SubTreeArity</a>, &lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.TopTreeArity\" title=\"type filecoin_proofs::types::MerkleTreeTrait::TopTreeArity\">TopTreeArity</a>&gt;&gt;: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    <a class=\"struct\" href=\"storage_proofs_porep/stacked/vanilla/labeling_proof/struct.LabelingProof.html\" title=\"struct storage_proofs_porep::stacked::vanilla::labeling_proof::LabelingProof\">LabelingProof</a>&lt;&lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.Hasher\" title=\"type filecoin_proofs::types::MerkleTreeTrait::Hasher\">Hasher</a>&gt;: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    <a class=\"struct\" href=\"storage_proofs_porep/stacked/vanilla/encoding_proof/struct.EncodingProof.html\" title=\"struct storage_proofs_porep::stacked::vanilla::encoding_proof::EncodingProof\">EncodingProof</a>&lt;&lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.Hasher\" title=\"type filecoin_proofs::types::MerkleTreeTrait::Hasher\">Hasher</a>&gt;: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/params.rs.html#209\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(\n    __deserializer: __D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"storage_proofs_porep/stacked/vanilla/params/struct.Proof.html\" title=\"struct storage_proofs_porep::stacked::vanilla::params::Proof\">Proof</a>&lt;Tree, G&gt;, &lt;__D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","filecoin_proofs::types::VanillaSealProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Proof%3CTree,+G%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/params.rs.html#254\">source</a><a href=\"#impl-Proof%3CTree,+G%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tree, G&gt; <a class=\"struct\" href=\"storage_proofs_porep/stacked/vanilla/params/struct.Proof.html\" title=\"struct storage_proofs_porep::stacked::vanilla::params::Proof\">Proof</a>&lt;Tree, G&gt;<div class=\"where\">where\n    Tree: <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>,\n    G: <a class=\"trait\" href=\"filecoin_hashers/types/trait.Hasher.html\" title=\"trait filecoin_hashers::types::Hasher\">Hasher</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.comm_r_last\" class=\"method\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/params.rs.html#255\">source</a><h4 class=\"code-header\">pub fn <a href=\"storage_proofs_porep/stacked/vanilla/params/struct.Proof.html#tymethod.comm_r_last\" class=\"fn\">comm_r_last</a>(\n    &amp;self,\n) -&gt; &lt;&lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.Hasher\" title=\"type filecoin_proofs::types::MerkleTreeTrait::Hasher\">Hasher</a> as <a class=\"trait\" href=\"filecoin_hashers/types/trait.Hasher.html\" title=\"trait filecoin_hashers::types::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_hashers/types/trait.Hasher.html#associatedtype.Domain\" title=\"type filecoin_hashers::types::Hasher::Domain\">Domain</a></h4></section><section id=\"method.comm_c\" class=\"method\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/params.rs.html#259\">source</a><h4 class=\"code-header\">pub fn <a href=\"storage_proofs_porep/stacked/vanilla/params/struct.Proof.html#tymethod.comm_c\" class=\"fn\">comm_c</a>(&amp;self) -&gt; &lt;&lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.Hasher\" title=\"type filecoin_proofs::types::MerkleTreeTrait::Hasher\">Hasher</a> as <a class=\"trait\" href=\"filecoin_hashers/types/trait.Hasher.html\" title=\"trait filecoin_hashers::types::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_hashers/types/trait.Hasher.html#associatedtype.Domain\" title=\"type filecoin_hashers::types::Hasher::Domain\">Domain</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify\" class=\"method\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/params.rs.html#264-270\">source</a><h4 class=\"code-header\">pub fn <a href=\"storage_proofs_porep/stacked/vanilla/params/struct.Proof.html#tymethod.verify\" class=\"fn\">verify</a>(\n    &amp;self,\n    pub_params: &amp;<a class=\"struct\" href=\"storage_proofs_porep/stacked/vanilla/params/struct.PublicParams.html\" title=\"struct storage_proofs_porep::stacked::vanilla::params::PublicParams\">PublicParams</a>&lt;Tree&gt;,\n    pub_inputs: &amp;<a class=\"struct\" href=\"storage_proofs_porep/stacked/vanilla/params/struct.PublicInputs.html\" title=\"struct storage_proofs_porep::stacked::vanilla::params::PublicInputs\">PublicInputs</a>&lt;&lt;&lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.Hasher\" title=\"type filecoin_proofs::types::MerkleTreeTrait::Hasher\">Hasher</a> as <a class=\"trait\" href=\"filecoin_hashers/types/trait.Hasher.html\" title=\"trait filecoin_hashers::types::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_hashers/types/trait.Hasher.html#associatedtype.Domain\" title=\"type filecoin_hashers::types::Hasher::Domain\">Domain</a>, &lt;G as <a class=\"trait\" href=\"filecoin_hashers/types/trait.Hasher.html\" title=\"trait filecoin_hashers::types::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_hashers/types/trait.Hasher.html#associatedtype.Domain\" title=\"type filecoin_hashers::types::Hasher::Domain\">Domain</a>&gt;,\n    challenge: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>,\n    graph: &amp;<a class=\"struct\" href=\"storage_proofs_porep/stacked/vanilla/graph/struct.StackedGraph.html\" title=\"struct storage_proofs_porep::stacked::vanilla::graph::StackedGraph\">StackedGraph</a>&lt;&lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.Hasher\" title=\"type filecoin_proofs::types::MerkleTreeTrait::Hasher\">Hasher</a>, <a class=\"struct\" href=\"storage_proofs_core/drgraph/struct.BucketGraph.html\" title=\"struct storage_proofs_core::drgraph::BucketGraph\">BucketGraph</a>&lt;&lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.Hasher\" title=\"type filecoin_proofs::types::MerkleTreeTrait::Hasher\">Hasher</a>&gt;&gt;,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Verify the full proof.</p>\n</div></details></div></details>",0,"filecoin_proofs::types::VanillaSealProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Proof%3CTree,+G%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/params.rs.html#209\">source</a><a href=\"#impl-Serialize-for-Proof%3CTree,+G%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Tree, G&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"storage_proofs_porep/stacked/vanilla/params/struct.Proof.html\" title=\"struct storage_proofs_porep::stacked::vanilla::params::Proof\">Proof</a>&lt;Tree, G&gt;<div class=\"where\">where\n    Tree: <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>,\n    G: <a class=\"trait\" href=\"filecoin_hashers/types/trait.Hasher.html\" title=\"trait filecoin_hashers::types::Hasher\">Hasher</a>,\n    <a class=\"struct\" href=\"filecoin_proofs/types/struct.MerkleProof.html\" title=\"struct filecoin_proofs::types::MerkleProof\">MerkleProof</a>&lt;G, <a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;&gt;: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    <a class=\"struct\" href=\"filecoin_proofs/types/struct.MerkleProof.html\" title=\"struct filecoin_proofs::types::MerkleProof\">MerkleProof</a>&lt;&lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.Hasher\" title=\"type filecoin_proofs::types::MerkleTreeTrait::Hasher\">Hasher</a>, &lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.Arity\" title=\"type filecoin_proofs::types::MerkleTreeTrait::Arity\">Arity</a>, &lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.SubTreeArity\" title=\"type filecoin_proofs::types::MerkleTreeTrait::SubTreeArity\">SubTreeArity</a>, &lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.TopTreeArity\" title=\"type filecoin_proofs::types::MerkleTreeTrait::TopTreeArity\">TopTreeArity</a>&gt;: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    <a class=\"struct\" href=\"storage_proofs_porep/stacked/vanilla/params/struct.ReplicaColumnProof.html\" title=\"struct storage_proofs_porep::stacked::vanilla::params::ReplicaColumnProof\">ReplicaColumnProof</a>&lt;<a class=\"struct\" href=\"filecoin_proofs/types/struct.MerkleProof.html\" title=\"struct filecoin_proofs::types::MerkleProof\">MerkleProof</a>&lt;&lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.Hasher\" title=\"type filecoin_proofs::types::MerkleTreeTrait::Hasher\">Hasher</a>, &lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.Arity\" title=\"type filecoin_proofs::types::MerkleTreeTrait::Arity\">Arity</a>, &lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.SubTreeArity\" title=\"type filecoin_proofs::types::MerkleTreeTrait::SubTreeArity\">SubTreeArity</a>, &lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.TopTreeArity\" title=\"type filecoin_proofs::types::MerkleTreeTrait::TopTreeArity\">TopTreeArity</a>&gt;&gt;: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    <a class=\"struct\" href=\"storage_proofs_porep/stacked/vanilla/labeling_proof/struct.LabelingProof.html\" title=\"struct storage_proofs_porep::stacked::vanilla::labeling_proof::LabelingProof\">LabelingProof</a>&lt;&lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.Hasher\" title=\"type filecoin_proofs::types::MerkleTreeTrait::Hasher\">Hasher</a>&gt;: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    <a class=\"struct\" href=\"storage_proofs_porep/stacked/vanilla/encoding_proof/struct.EncodingProof.html\" title=\"struct storage_proofs_porep::stacked::vanilla::encoding_proof::EncodingProof\">EncodingProof</a>&lt;&lt;Tree as <a class=\"trait\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html\" title=\"trait filecoin_proofs::types::MerkleTreeTrait\">MerkleTreeTrait</a>&gt;::<a class=\"associatedtype\" href=\"filecoin_proofs/types/trait.MerkleTreeTrait.html#associatedtype.Hasher\" title=\"type filecoin_proofs::types::MerkleTreeTrait::Hasher\">Hasher</a>&gt;: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/params.rs.html#209\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(\n    &amp;self,\n    __serializer: __S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;__S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;__S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","filecoin_proofs::types::VanillaSealProof"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()