(function() {var type_impls = {
"storage_proofs_porep":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-StackedGraph%3CH,+G%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#31\">source</a><a href=\"#impl-Clone-for-StackedGraph%3CH,+G%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;H, G&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"storage_proofs_porep/stacked/struct.StackedGraph.html\" title=\"struct storage_proofs_porep::stacked::StackedGraph\">StackedGraph</a>&lt;H, G&gt;<div class=\"where\">where\n    H: <a class=\"trait\" href=\"filecoin_hashers/types/trait.Hasher.html\" title=\"trait filecoin_hashers::types::Hasher\">Hasher</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    G: <a class=\"trait\" href=\"storage_proofs_core/drgraph/trait.Graph.html\" title=\"trait storage_proofs_core::drgraph::Graph\">Graph</a>&lt;H&gt; + 'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#31\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"storage_proofs_porep/stacked/struct.StackedGraph.html\" title=\"struct storage_proofs_porep::stacked::StackedGraph\">StackedGraph</a>&lt;H, G&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","storage_proofs_porep::stacked::vanilla::graph::StackedBucketGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-StackedGraph%3CH,+G%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#46-59\">source</a><a href=\"#impl-Debug-for-StackedGraph%3CH,+G%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;H, G&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"storage_proofs_porep/stacked/struct.StackedGraph.html\" title=\"struct storage_proofs_porep::stacked::StackedGraph\">StackedGraph</a>&lt;H, G&gt;<div class=\"where\">where\n    H: <a class=\"trait\" href=\"filecoin_hashers/types/trait.Hasher.html\" title=\"trait filecoin_hashers::types::Hasher\">Hasher</a>,\n    G: <a class=\"trait\" href=\"storage_proofs_core/drgraph/trait.Graph.html\" title=\"trait storage_proofs_core::drgraph::Graph\">Graph</a>&lt;H&gt; + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#51-58\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","storage_proofs_porep::stacked::vanilla::graph::StackedBucketGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Graph%3CH%3E-for-StackedGraph%3CH,+G%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#279-332\">source</a><a href=\"#impl-Graph%3CH%3E-for-StackedGraph%3CH,+G%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;H, G&gt; <a class=\"trait\" href=\"storage_proofs_core/drgraph/trait.Graph.html\" title=\"trait storage_proofs_core::drgraph::Graph\">Graph</a>&lt;H&gt; for <a class=\"struct\" href=\"storage_proofs_porep/stacked/struct.StackedGraph.html\" title=\"struct storage_proofs_porep::stacked::StackedGraph\">StackedGraph</a>&lt;H, G&gt;<div class=\"where\">where\n    H: <a class=\"trait\" href=\"filecoin_hashers/types/trait.Hasher.html\" title=\"trait filecoin_hashers::types::Hasher\">Hasher</a>,\n    G: <a class=\"trait\" href=\"storage_proofs_core/drgraph/trait.Graph.html\" title=\"trait storage_proofs_core::drgraph::Graph\">Graph</a>&lt;H&gt; + <a class=\"trait\" href=\"storage_proofs_core/parameter_cache/trait.ParameterSetMetadata.html\" title=\"trait storage_proofs_core::parameter_cache::ParameterSetMetadata\">ParameterSetMetadata</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Key\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Key\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"storage_proofs_core/drgraph/trait.Graph.html#associatedtype.Key\" class=\"associatedtype\">Key</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#286-288\">source</a><a href=\"#method.size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"storage_proofs_core/drgraph/trait.Graph.html#tymethod.size\" class=\"fn\">size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the size of the graph (number of nodes).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.degree\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#290-292\">source</a><a href=\"#method.degree\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"storage_proofs_core/drgraph/trait.Graph.html#tymethod.degree\" class=\"fn\">degree</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the number of parents of each node in the graph.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parents\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#295-306\">source</a><a href=\"#method.parents\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"storage_proofs_core/drgraph/trait.Graph.html#tymethod.parents\" class=\"fn\">parents</a>(&amp;self, node: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>, parents: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u32.html\">u32</a>]) -&gt; <a class=\"type\" href=\"anyhow/type.Result.html\" title=\"type anyhow::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Returns a sorted list of all parents of this node. The parents may be repeated. <a href=\"storage_proofs_core/drgraph/trait.Graph.html#tymethod.parents\">Read more</a></div></details><section id=\"method.seed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#308-310\">source</a><a href=\"#method.seed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"storage_proofs_core/drgraph/trait.Graph.html#tymethod.seed\" class=\"fn\">seed</a>(&amp;self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.array.html\">28</a>]</h4></section><section id=\"method.new\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#312-320\">source</a><a href=\"#method.new\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"storage_proofs_core/drgraph/trait.Graph.html#tymethod.new\" class=\"fn\">new</a>(\n    nodes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>,\n    base_degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>,\n    expansion_degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>,\n    porep_id: <a class=\"type\" href=\"storage_proofs_core/type.PoRepID.html\" title=\"type storage_proofs_core::PoRepID\">PoRepID</a>,\n    api_version: <a class=\"enum\" href=\"storage_proofs_core/api_version/enum.ApiVersion.html\" title=\"enum storage_proofs_core::api_version::ApiVersion\">ApiVersion</a>,\n) -&gt; <a class=\"type\" href=\"anyhow/type.Result.html\" title=\"type anyhow::Result\">Result</a>&lt;Self&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_key\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#322-331\">source</a><a href=\"#method.create_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"storage_proofs_core/drgraph/trait.Graph.html#tymethod.create_key\" class=\"fn\">create_key</a>(\n    &amp;self,\n    _id: &amp;H::<a class=\"associatedtype\" href=\"filecoin_hashers/types/trait.Hasher.html#associatedtype.Domain\" title=\"type filecoin_hashers::types::Hasher::Domain\">Domain</a>,\n    _node: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>,\n    _parents: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u32.html\">u32</a>],\n    _base_parents_data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>],\n    _exp_parents_data: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>]&gt;,\n) -&gt; <a class=\"type\" href=\"anyhow/type.Result.html\" title=\"type anyhow::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"storage_proofs_core/drgraph/trait.Graph.html#associatedtype.Key\" title=\"type storage_proofs_core::drgraph::Graph::Key\">Key</a>&gt;</h4></section></summary><div class='docblock'>Creates the encoding key.\nThe algorithm for that is <code>Sha256(id | encodedParentNode1 | encodedParentNode1 | ...)</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.expected_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/storage_proofs_core/drgraph.rs.html#35\">source</a><a href=\"#method.expected_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"storage_proofs_core/drgraph/trait.Graph.html#method.expected_size\" class=\"fn\">expected_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the expected size of all nodes in the graph.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.merkle_tree_depth\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/storage_proofs_core/drgraph.rs.html#40\">source</a><a href=\"#method.merkle_tree_depth\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"storage_proofs_core/drgraph/trait.Graph.html#method.merkle_tree_depth\" class=\"fn\">merkle_tree_depth</a>&lt;U&gt;(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    U: 'static + <a class=\"trait\" href=\"filecoin_hashers/poseidon_types/trait.PoseidonArity.html\" title=\"trait filecoin_hashers::poseidon_types::PoseidonArity\">PoseidonArity</a>,</div></h4></section></summary><div class='docblock'>Returns the merkle tree depth.</div></details></div></details>","Graph<H>","storage_proofs_porep::stacked::vanilla::graph::StackedBucketGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ParameterSetMetadata-for-StackedGraph%3CH,+G%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#265-277\">source</a><a href=\"#impl-ParameterSetMetadata-for-StackedGraph%3CH,+G%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;H, G&gt; <a class=\"trait\" href=\"storage_proofs_core/parameter_cache/trait.ParameterSetMetadata.html\" title=\"trait storage_proofs_core::parameter_cache::ParameterSetMetadata\">ParameterSetMetadata</a> for <a class=\"struct\" href=\"storage_proofs_porep/stacked/struct.StackedGraph.html\" title=\"struct storage_proofs_porep::stacked::StackedGraph\">StackedGraph</a>&lt;H, G&gt;<div class=\"where\">where\n    H: <a class=\"trait\" href=\"filecoin_hashers/types/trait.Hasher.html\" title=\"trait filecoin_hashers::types::Hasher\">Hasher</a>,\n    G: <a class=\"trait\" href=\"storage_proofs_core/drgraph/trait.Graph.html\" title=\"trait storage_proofs_core::drgraph::Graph\">Graph</a>&lt;H&gt; + <a class=\"trait\" href=\"storage_proofs_core/parameter_cache/trait.ParameterSetMetadata.html\" title=\"trait storage_proofs_core::parameter_cache::ParameterSetMetadata\">ParameterSetMetadata</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.identifier\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#270-272\">source</a><a href=\"#method.identifier\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"storage_proofs_core/parameter_cache/trait.ParameterSetMetadata.html#tymethod.identifier\" class=\"fn\">identifier</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section><section id=\"method.sector_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#274-276\">source</a><a href=\"#method.sector_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"storage_proofs_core/parameter_cache/trait.ParameterSetMetadata.html#tymethod.sector_size\" class=\"fn\">sector_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u64.html\">u64</a></h4></section></div></details>","ParameterSetMetadata","storage_proofs_porep::stacked::vanilla::graph::StackedBucketGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-StackedGraph%3CH,+G%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#436-444\">source</a><a href=\"#impl-PartialEq-for-StackedGraph%3CH,+G%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;H, G&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"storage_proofs_porep/stacked/struct.StackedGraph.html\" title=\"struct storage_proofs_porep::stacked::StackedGraph\">StackedGraph</a>&lt;H, G&gt;<div class=\"where\">where\n    H: <a class=\"trait\" href=\"filecoin_hashers/types/trait.Hasher.html\" title=\"trait filecoin_hashers::types::Hasher\">Hasher</a>,\n    G: <a class=\"trait\" href=\"storage_proofs_core/drgraph/trait.Graph.html\" title=\"trait storage_proofs_core::drgraph::Graph\">Graph</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#441-443\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"storage_proofs_porep/stacked/struct.StackedGraph.html\" title=\"struct storage_proofs_porep::stacked::StackedGraph\">StackedGraph</a>&lt;H, G&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","storage_proofs_porep::stacked::vanilla::graph::StackedBucketGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StackedGraph%3CH,+G%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#334-434\">source</a><a href=\"#impl-StackedGraph%3CH,+G%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;H, G&gt; <a class=\"struct\" href=\"storage_proofs_porep/stacked/struct.StackedGraph.html\" title=\"struct storage_proofs_porep::stacked::StackedGraph\">StackedGraph</a>&lt;H, G&gt;<div class=\"where\">where\n    H: <a class=\"trait\" href=\"filecoin_hashers/types/trait.Hasher.html\" title=\"trait filecoin_hashers::types::Hasher\">Hasher</a>,\n    G: <a class=\"trait\" href=\"storage_proofs_core/drgraph/trait.Graph.html\" title=\"trait storage_proofs_core::drgraph::Graph\">Graph</a>&lt;H&gt; + <a class=\"trait\" href=\"storage_proofs_core/parameter_cache/trait.ParameterSetMetadata.html\" title=\"trait storage_proofs_core::parameter_cache::ParameterSetMetadata\">ParameterSetMetadata</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.generate_expanded_parents\" class=\"method\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#388-393\">source</a><h4 class=\"code-header\">pub fn <a href=\"storage_proofs_porep/stacked/struct.StackedGraph.html#tymethod.generate_expanded_parents\" class=\"fn\">generate_expanded_parents</a>(\n    &amp;self,\n    node: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>,\n    expanded_parents: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u32.html\">u32</a>],\n)</h4></section><section id=\"method.new_stacked\" class=\"method\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#395-410\">source</a><h4 class=\"code-header\">pub fn <a href=\"storage_proofs_porep/stacked/struct.StackedGraph.html#tymethod.new_stacked\" class=\"fn\">new_stacked</a>(\n    nodes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>,\n    base_degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>,\n    expansion_degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>,\n    porep_id: <a class=\"type\" href=\"storage_proofs_core/type.PoRepID.html\" title=\"type storage_proofs_core::PoRepID\">PoRepID</a>,\n    api_version: <a class=\"enum\" href=\"storage_proofs_core/api_version/enum.ApiVersion.html\" title=\"enum storage_proofs_core::api_version::ApiVersion\">ApiVersion</a>,\n) -&gt; <a class=\"type\" href=\"anyhow/type.Result.html\" title=\"type anyhow::Result\">Result</a>&lt;Self&gt;</h4></section><section id=\"method.base_graph\" class=\"method\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#412-414\">source</a><h4 class=\"code-header\">pub fn <a href=\"storage_proofs_porep/stacked/struct.StackedGraph.html#tymethod.base_graph\" class=\"fn\">base_graph</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;G</a></h4></section><section id=\"method.expansion_degree\" class=\"method\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#416-418\">source</a><h4 class=\"code-header\">pub fn <a href=\"storage_proofs_porep/stacked/struct.StackedGraph.html#tymethod.expansion_degree\" class=\"fn\">expansion_degree</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.base_parents\" class=\"method\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#420-423\">source</a><h4 class=\"code-header\">pub fn <a href=\"storage_proofs_porep/stacked/struct.StackedGraph.html#tymethod.base_parents\" class=\"fn\">base_parents</a>(&amp;self, node: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>, parents: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u32.html\">u32</a>]) -&gt; <a class=\"type\" href=\"anyhow/type.Result.html\" title=\"type anyhow::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.unit.html\">()</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.expanded_parents\" class=\"method\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#429-433\">source</a><h4 class=\"code-header\">pub fn <a href=\"storage_proofs_porep/stacked/struct.StackedGraph.html#tymethod.expanded_parents\" class=\"fn\">expanded_parents</a>(&amp;self, node: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>, parents: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u32.html\">u32</a>]) -&gt; <a class=\"type\" href=\"anyhow/type.Result.html\" title=\"type anyhow::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Assign <code>self.expansion_degree</code> parents to <code>node</code> using an invertible permutation\nthat is applied one way for the forward layers and one way for the reversed\nones.</p>\n</div></details></div></details>",0,"storage_proofs_porep::stacked::vanilla::graph::StackedBucketGraph"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StackedGraph%3CH,+G%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#93-263\">source</a><a href=\"#impl-StackedGraph%3CH,+G%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;H, G&gt; <a class=\"struct\" href=\"storage_proofs_porep/stacked/struct.StackedGraph.html\" title=\"struct storage_proofs_porep::stacked::StackedGraph\">StackedGraph</a>&lt;H, G&gt;<div class=\"where\">where\n    H: <a class=\"trait\" href=\"filecoin_hashers/types/trait.Hasher.html\" title=\"trait filecoin_hashers::types::Hasher\">Hasher</a>,\n    G: <a class=\"trait\" href=\"storage_proofs_core/drgraph/trait.Graph.html\" title=\"trait storage_proofs_core::drgraph::Graph\">Graph</a>&lt;H&gt; + <a class=\"trait\" href=\"storage_proofs_core/parameter_cache/trait.ParameterSetMetadata.html\" title=\"trait storage_proofs_core::parameter_cache::ParameterSetMetadata\">ParameterSetMetadata</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#98-133\">source</a><h4 class=\"code-header\">pub fn <a href=\"storage_proofs_porep/stacked/struct.StackedGraph.html#tymethod.new\" class=\"fn\">new</a>(\n    base_graph: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;G&gt;,\n    nodes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>,\n    base_degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>,\n    expansion_degree: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>,\n    porep_id: <a class=\"type\" href=\"storage_proofs_core/type.PoRepID.html\" title=\"type storage_proofs_core::PoRepID\">PoRepID</a>,\n    api_version: <a class=\"enum\" href=\"storage_proofs_core/api_version/enum.ApiVersion.html\" title=\"enum storage_proofs_core::api_version::ApiVersion\">ApiVersion</a>,\n) -&gt; <a class=\"type\" href=\"anyhow/type.Result.html\" title=\"type anyhow::Result\">Result</a>&lt;Self&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.parent_cache\" class=\"method\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#136-145\">source</a><h4 class=\"code-header\">pub fn <a href=\"storage_proofs_porep/stacked/struct.StackedGraph.html#tymethod.parent_cache\" class=\"fn\">parent_cache</a>(&amp;self) -&gt; <a class=\"type\" href=\"anyhow/type.Result.html\" title=\"type anyhow::Result\">Result</a>&lt;ParentCache&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a reference to the parent cache.</p>\n</div></details><section id=\"method.copy_parents_data_exp\" class=\"method\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#146-164\">source</a><h4 class=\"code-header\">pub fn <a href=\"storage_proofs_porep/stacked/struct.StackedGraph.html#tymethod.copy_parents_data_exp\" class=\"fn\">copy_parents_data_exp</a>(\n    &amp;self,\n    node: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u32.html\">u32</a>,\n    base_data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>],\n    exp_data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>],\n    hasher: <a class=\"struct\" href=\"sha2raw/sha256/struct.Sha256.html\" title=\"struct sha2raw::sha256::Sha256\">Sha256</a>,\n    cache: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut ParentCache&gt;,\n) -&gt; <a class=\"type\" href=\"anyhow/type.Result.html\" title=\"type anyhow::Result\">Result</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.array.html\">32</a>]&gt;</h4></section><section id=\"method.copy_parents_data\" class=\"method\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#166-183\">source</a><h4 class=\"code-header\">pub fn <a href=\"storage_proofs_porep/stacked/struct.StackedGraph.html#tymethod.copy_parents_data\" class=\"fn\">copy_parents_data</a>(\n    &amp;self,\n    node: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u32.html\">u32</a>,\n    base_data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>],\n    hasher: <a class=\"struct\" href=\"sha2raw/sha256/struct.Sha256.html\" title=\"struct sha2raw::sha256::Sha256\">Sha256</a>,\n    cache: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut ParentCache&gt;,\n) -&gt; <a class=\"type\" href=\"anyhow/type.Result.html\" title=\"type anyhow::Result\">Result</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.array.html\">32</a>]&gt;</h4></section></div></details>",0,"storage_proofs_porep::stacked::vanilla::graph::StackedBucketGraph"],["<section id=\"impl-Eq-for-StackedGraph%3CH,+G%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/storage_proofs_porep/stacked/vanilla/graph.rs.html#446-451\">source</a><a href=\"#impl-Eq-for-StackedGraph%3CH,+G%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;H, G&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"storage_proofs_porep/stacked/struct.StackedGraph.html\" title=\"struct storage_proofs_porep::stacked::StackedGraph\">StackedGraph</a>&lt;H, G&gt;<div class=\"where\">where\n    H: <a class=\"trait\" href=\"filecoin_hashers/types/trait.Hasher.html\" title=\"trait filecoin_hashers::types::Hasher\">Hasher</a>,\n    G: <a class=\"trait\" href=\"storage_proofs_core/drgraph/trait.Graph.html\" title=\"trait storage_proofs_core::drgraph::Graph\">Graph</a>&lt;H&gt;,</div></h3></section>","Eq","storage_proofs_porep::stacked::vanilla::graph::StackedBucketGraph"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()