(function() {var type_impls = {
"nunny":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NonEmpty%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nunny/lib.rs.html#118\">source</a><a href=\"#impl-Clone-for-NonEmpty%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\">NonEmpty</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nunny/lib.rs.html#118\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\">NonEmpty</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","nunny::Array","nunny::Slice","nunny::Vec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-NonEmpty%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nunny/lib.rs.html#118\">source</a><a href=\"#impl-Debug-for-NonEmpty%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\">NonEmpty</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nunny/lib.rs.html#118\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","nunny::Array","nunny::Slice","nunny::Vec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-NonEmpty%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nunny/lib.rs.html#118\">source</a><a href=\"#impl-Hash-for-NonEmpty%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\">NonEmpty</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nunny/lib.rs.html#118\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;mut __H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.80.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.80.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details></div></details>","Hash","nunny::Array","nunny::Slice","nunny::Vec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NonEmpty%3CI%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#27-349\">source</a><a href=\"#impl-NonEmpty%3CI%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"struct\" href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\">NonEmpty</a>&lt;I&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>,</div></h3></section></summary><div class=\"docblock\"><p>Methods on <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a>s with a non-empty invariant.</p>\n<p>See <a href=\"nunny/struct.NonEmpty.html#method.relax\" title=\"method nunny::NonEmpty::relax\"><code>Self::relax</code></a> to access the normal iterator inside.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.first\" class=\"method\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#40-42\">source</a><h4 class=\"code-header\">pub fn <a href=\"nunny/struct.NonEmpty.html#tymethod.first\" class=\"fn\">first</a>(self) -&gt; I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a></h4></section></summary><div class=\"docblock\"><p><a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty</code></a> version of <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#tymethod.next\" title=\"method core::iter::traits::iterator::Iterator::next\"><code>Iterator::next</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>v = <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];\n<span class=\"kw\">let _</span>: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>u8&gt; = v.iter().next();\n    <span class=\"comment\">// ^ normally you have to handle the empty case\n</span><span class=\"kw\">let _</span>: <span class=\"kw-2\">&amp;</span>u8 = v.iter_ne().first();\n    <span class=\"comment\">// ^ but we know there is at least one element</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.last\" class=\"method\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#52-54\">source</a><h4 class=\"code-header\">pub fn <a href=\"nunny/struct.NonEmpty.html#tymethod.last\" class=\"fn\">last</a>(self) -&gt; I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a></h4></section></summary><div class=\"docblock\"><p><a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty</code></a> version of <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#method.last\" title=\"method core::iter::traits::iterator::Iterator::last\"><code>Iterator::last</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>v = <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];\n<span class=\"kw\">let _</span>: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>u8&gt; = v.iter().last();\n    <span class=\"comment\">// ^ normally you have to handle the empty case\n</span><span class=\"kw\">let _</span>: <span class=\"kw-2\">&amp;</span>u8 = v.iter_ne().last();\n    <span class=\"comment\">// ^ but we know there is at least one element</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#66-73\">source</a><h4 class=\"code-header\">pub fn <a href=\"nunny/struct.NonEmpty.html#tymethod.map\" class=\"fn\">map</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\">NonEmpty</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/adapters/map/struct.Map.html\" title=\"struct core::iter::adapters::map::Map\">Map</a>&lt;I, F&gt;&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class=\"docblock\"><p><a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty</code></a> version of <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#method.map\" title=\"method core::iter::traits::iterator::Iterator::map\"><code>Iterator::map</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>iter = <span class=\"macro\">slice!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>].iter_ne();\n<span class=\"macro\">assert_eq!</span>(\n    iter.map(|it| <span class=\"kw-2\">*</span>it * <span class=\"number\">2</span>).last(),\n                        <span class=\"comment\">// ^ the invariant is maintained\n                        //   so we _know_ there's a last element\n    </span><span class=\"number\">6\n</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#85-92\">source</a><h4 class=\"code-header\">pub fn <a href=\"nunny/struct.NonEmpty.html#tymethod.chain\" class=\"fn\">chain</a>&lt;U&gt;(\n    self,\n    other: U,\n) -&gt; <a class=\"struct\" href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\">NonEmpty</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/adapters/chain/struct.Chain.html\" title=\"struct core::iter::adapters::chain::Chain\">Chain</a>&lt;I, &lt;U as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>&gt;&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p><a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty</code></a> version of <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#method.chain\" title=\"method core::iter::traits::iterator::Iterator::chain\"><code>Iterator::chain</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>iter = <span class=\"macro\">slice!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>].iter_ne();\n<span class=\"macro\">assert_eq!</span>(\n    iter.chain(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">3</span>]).last(),\n                  <span class=\"comment\">// ^ the invariant is maintained\n                  //   so we _know_ there's a last element\n    </span><span class=\"kw-2\">&amp;</span><span class=\"number\">3\n</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enumerate\" class=\"method\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#104-108\">source</a><h4 class=\"code-header\">pub fn <a href=\"nunny/struct.NonEmpty.html#tymethod.enumerate\" class=\"fn\">enumerate</a>(self) -&gt; <a class=\"struct\" href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\">NonEmpty</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/adapters/enumerate/struct.Enumerate.html\" title=\"struct core::iter::adapters::enumerate::Enumerate\">Enumerate</a>&lt;I&gt;&gt;</h4></section></summary><div class=\"docblock\"><p><a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty</code></a> version of <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#method.enumerate\" title=\"method core::iter::traits::iterator::Iterator::enumerate\"><code>Iterator::enumerate</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>iter = <span class=\"macro\">slice!</span>[<span class=\"string\">'a'</span>, <span class=\"string\">'b'</span>].iter_ne();\n<span class=\"macro\">assert_eq!</span>(\n    iter.enumerate().last(),\n                 <span class=\"comment\">// ^ the invariant is maintained\n                 //   so we _know_ there's a last element\n    </span>(<span class=\"number\">1</span>, <span class=\"kw-2\">&amp;</span><span class=\"string\">'b'</span>)\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peekable\" class=\"method\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#124-128\">source</a><h4 class=\"code-header\">pub fn <a href=\"nunny/struct.NonEmpty.html#tymethod.peekable\" class=\"fn\">peekable</a>(self) -&gt; <a class=\"struct\" href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\">NonEmpty</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/adapters/peekable/struct.Peekable.html\" title=\"struct core::iter::adapters::peekable::Peekable\">Peekable</a>&lt;I&gt;&gt;</h4></section></summary><div class=\"docblock\"><p><a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty</code></a> version of <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#method.peekable\" title=\"method core::iter::traits::iterator::Iterator::peekable\"><code>Iterator::peekable</code></a>, allowing you to use\n<a href=\"nunny/struct.NonEmpty.html#method.peek\" title=\"method nunny::NonEmpty::peek\"><code>Self::peek</code></a> and <a href=\"nunny/struct.NonEmpty.html#method.peek_mut\" title=\"method nunny::NonEmpty::peek_mut\"><code>Self::peek_mut</code></a></p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>peek_me = <span class=\"macro\">vec!</span>[<span class=\"string\">'a'</span>, <span class=\"string\">'b'</span>].into_iter_ne().peekable();\n<span class=\"macro\">assert_eq!</span>(\n    <span class=\"kw-2\">*</span>peek_me.peek(),\n    <span class=\"string\">'a'\n</span>);\n<span class=\"kw-2\">*</span>peek_me.peek_mut() = <span class=\"string\">'b'</span>;\n<span class=\"macro\">assert_eq!</span>(\n    peek_me.collect_vec(),\n    [<span class=\"string\">'b'</span>, <span class=\"string\">'b'</span>]\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#142-146\">source</a><h4 class=\"code-header\">pub fn <a href=\"nunny/struct.NonEmpty.html#tymethod.take\" class=\"fn\">take</a>(self, n: <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.0/core/num/nonzero/type.NonZeroUsize.html\" title=\"type core::num::nonzero::NonZeroUsize\">NonZeroUsize</a>) -&gt; <a class=\"struct\" href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\">NonEmpty</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/adapters/take/struct.Take.html\" title=\"struct core::iter::adapters::take::Take\">Take</a>&lt;I&gt;&gt;</h4></section></summary><div class=\"docblock\"><p><a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty</code></a> version of <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#method.take\" title=\"method core::iter::traits::iterator::Iterator::take\"><code>Iterator::take</code></a>.</p>\n<p>Note that <code>n</code> cannot be zero, to maintain the <a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty</code></a> invariant.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>iter = <span class=\"macro\">slice!</span>[<span class=\"string\">'a'</span>, <span class=\"string\">'b'</span>].iter_ne();\n<span class=\"macro\">assert_eq!</span>(\n    iter.take(<span class=\"macro\">nonzero!</span>(<span class=\"number\">1</span>)).last(),\n           <span class=\"comment\">// ^ compile time checked\n    </span><span class=\"kw-2\">&amp;</span><span class=\"string\">'a'\n</span>)</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flatten\" class=\"method\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#160-171\">source</a><h4 class=\"code-header\">pub fn <a href=\"nunny/struct.NonEmpty.html#tymethod.flatten\" class=\"fn\">flatten</a>&lt;II, T&gt;(self) -&gt; <a class=\"struct\" href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\">NonEmpty</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/adapters/flatten/struct.FlatMap.html\" title=\"struct core::iter::adapters::flatten::FlatMap\">FlatMap</a>&lt;I, II, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.fn.html\">fn</a>(_: I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; II&gt;&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"struct\" href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\">NonEmpty</a>&lt;II&gt;&gt;,\n    II: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p><a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty</code></a> version of <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#method.flatten\" title=\"method core::iter::traits::iterator::Iterator::flatten\"><code>Iterator::flatten</code></a>.</p>\n<p>Note that the inner items must also be <a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty</code></a>, to maintain the invariant.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>nunny::{vec};\n<span class=\"kw\">let </span>nested = <span class=\"macro\">vec!</span>[<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>], <span class=\"macro\">vec!</span>[<span class=\"number\">2</span>, <span class=\"number\">3</span>]];\n<span class=\"macro\">assert_eq!</span>(\n    nested.into_iter_ne().flatten().collect_vec(),\n    [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>],\n);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fuse\" class=\"method\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#173-177\">source</a><h4 class=\"code-header\">pub fn <a href=\"nunny/struct.NonEmpty.html#tymethod.fuse\" class=\"fn\">fuse</a>(self) -&gt; <a class=\"struct\" href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\">NonEmpty</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/adapters/fuse/struct.Fuse.html\" title=\"struct core::iter::adapters::fuse::Fuse\">Fuse</a>&lt;I&gt;&gt;</h4></section></summary><div class=\"docblock\"><p><a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty</code></a> version of <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#method.fuse\" title=\"method core::iter::traits::iterator::Iterator::fuse\"><code>Iterator::fuse</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inspect\" class=\"method\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#179-186\">source</a><h4 class=\"code-header\">pub fn <a href=\"nunny/struct.NonEmpty.html#tymethod.inspect\" class=\"fn\">inspect</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\">NonEmpty</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/adapters/inspect/struct.Inspect.html\" title=\"struct core::iter::adapters::inspect::Inspect\">Inspect</a>&lt;I, F&gt;&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>),</div></h4></section></summary><div class=\"docblock\"><p><a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty</code></a> version of <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#method.inspect\" title=\"method core::iter::traits::iterator::Iterator::inspect\"><code>Iterator::inspect</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reduce\" class=\"method\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#197-202\">source</a><h4 class=\"code-header\">pub fn <a href=\"nunny/struct.NonEmpty.html#tymethod.reduce\" class=\"fn\">reduce</a>&lt;F&gt;(self, f: F) -&gt; I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>,</div></h4></section></summary><div class=\"docblock\"><p><a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty</code></a> version of <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#method.reduce\" title=\"method core::iter::traits::iterator::Iterator::reduce\"><code>Iterator::reduce</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>v = <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];\n<span class=\"kw\">let _</span>: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>u8&gt; = v.iter().reduce(min);\n    <span class=\"comment\">// ^ normally you have to handle the empty case\n</span><span class=\"kw\">let _</span>: <span class=\"kw-2\">&amp;</span>u8 = v.iter_ne().reduce(min);\n    <span class=\"comment\">// ^ but we know there is at least one element</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#212-217\">source</a><h4 class=\"code-header\">pub fn <a href=\"nunny/struct.NonEmpty.html#tymethod.max\" class=\"fn\">max</a>(self) -&gt; I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a><div class=\"where\">where\n    I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p><a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty</code></a> version of <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#method.max\" title=\"method core::iter::traits::iterator::Iterator::max\"><code>Iterator::max</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>v = <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];\n<span class=\"kw\">let _</span>: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>u8&gt; = v.iter().max();\n    <span class=\"comment\">// ^ normally you have to handle the empty case\n</span><span class=\"kw\">let _</span>: <span class=\"kw-2\">&amp;</span>u8 = v.iter_ne().max();\n    <span class=\"comment\">// ^ but we know there is at least one element</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#227-232\">source</a><h4 class=\"code-header\">pub fn <a href=\"nunny/struct.NonEmpty.html#tymethod.min\" class=\"fn\">min</a>(self) -&gt; I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a><div class=\"where\">where\n    I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class=\"docblock\"><p><a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty</code></a> version of <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#method.min\" title=\"method core::iter::traits::iterator::Iterator::min\"><code>Iterator::min</code></a>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>v = <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];\n<span class=\"kw\">let _</span>: <span class=\"prelude-ty\">Option</span>&lt;<span class=\"kw-2\">&amp;</span>u8&gt; = v.iter().min();\n    <span class=\"comment\">// ^ normally you have to handle the empty case\n</span><span class=\"kw\">let _</span>: <span class=\"kw-2\">&amp;</span>u8 = v.iter_ne().min();\n    <span class=\"comment\">// ^ but we know there is at least one element</span></code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_by_key\" class=\"method\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#234-240\">source</a><h4 class=\"code-header\">pub fn <a href=\"nunny/struct.NonEmpty.html#tymethod.max_by_key\" class=\"fn\">max_by_key</a>&lt;B, F&gt;(self, f: F) -&gt; I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a><div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class=\"docblock\"><p><a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty</code></a> version of <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#method.max_by_key\" title=\"method core::iter::traits::iterator::Iterator::max_by_key\"><code>Iterator::max_by_key</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_by\" class=\"method\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#242-247\">source</a><h4 class=\"code-header\">pub fn <a href=\"nunny/struct.NonEmpty.html#tymethod.max_by\" class=\"fn\">max_by</a>&lt;F&gt;(self, compare: F) -&gt; I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &amp;I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p><a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty</code></a> version of <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#method.max_by\" title=\"method core::iter::traits::iterator::Iterator::max_by\"><code>Iterator::max_by</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_by_key\" class=\"method\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#249-255\">source</a><h4 class=\"code-header\">pub fn <a href=\"nunny/struct.NonEmpty.html#tymethod.min_by_key\" class=\"fn\">min_by_key</a>&lt;B, F&gt;(self, f: F) -&gt; I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a><div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class=\"docblock\"><p><a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty</code></a> version of <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#method.min_by_key\" title=\"method core::iter::traits::iterator::Iterator::min_by_key\"><code>Iterator::min_by_key</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_by\" class=\"method\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#257-262\">source</a><h4 class=\"code-header\">pub fn <a href=\"nunny/struct.NonEmpty.html#tymethod.min_by\" class=\"fn\">min_by</a>&lt;F&gt;(self, compare: F) -&gt; I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &amp;I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class=\"docblock\"><p><a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty</code></a> version of <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#method.min_by\" title=\"method core::iter::traits::iterator::Iterator::min_by\"><code>Iterator::min_by</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rev\" class=\"method\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#264-271\">source</a><h4 class=\"code-header\">pub fn <a href=\"nunny/struct.NonEmpty.html#tymethod.rev\" class=\"fn\">rev</a>(self) -&gt; <a class=\"struct\" href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\">NonEmpty</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/adapters/rev/struct.Rev.html\" title=\"struct core::iter::adapters::rev::Rev\">Rev</a>&lt;I&gt;&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a>,</div></h4></section></summary><div class=\"docblock\"><p><a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty</code></a> version of <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#method.rev\" title=\"method core::iter::traits::iterator::Iterator::rev\"><code>Iterator::rev</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unzip_vec\" class=\"method\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#276-286\">source</a><h4 class=\"code-header\">pub fn <a href=\"nunny/struct.NonEmpty.html#tymethod.unzip_vec\" class=\"fn\">unzip_vec</a>&lt;A, B&gt;(self) -&gt; (<a class=\"type\" href=\"nunny/type.Vec.html\" title=\"type nunny::Vec\">Vec</a>&lt;A&gt;, <a class=\"type\" href=\"nunny/type.Vec.html\" title=\"type nunny::Vec\">Vec</a>&lt;B&gt;)<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(A, B)</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p><a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty</code></a> version of <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#method.unzip\" title=\"method core::iter::traits::iterator::Iterator::unzip\"><code>Iterator::unzip</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#288-296\">source</a><h4 class=\"code-header\">pub fn <a href=\"nunny/struct.NonEmpty.html#tymethod.copied\" class=\"fn\">copied</a>&lt;'a, T&gt;(self) -&gt; <a class=\"struct\" href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\">NonEmpty</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/adapters/copied/struct.Copied.html\" title=\"struct core::iter::adapters::copied::Copied\">Copied</a>&lt;I&gt;&gt;<div class=\"where\">where\n    T: 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;'a T</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p><a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty</code></a> version of <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#method.copied\" title=\"method core::iter::traits::iterator::Iterator::copied\"><code>Iterator::copied</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#298-306\">source</a><h4 class=\"code-header\">pub fn <a href=\"nunny/struct.NonEmpty.html#tymethod.cloned\" class=\"fn\">cloned</a>&lt;'a, T&gt;(self) -&gt; <a class=\"struct\" href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\">NonEmpty</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/adapters/cloned/struct.Cloned.html\" title=\"struct core::iter::adapters::cloned::Cloned\">Cloned</a>&lt;I&gt;&gt;<div class=\"where\">where\n    T: 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;'a T</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p><a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty</code></a> version of <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#method.cloned\" title=\"method core::iter::traits::iterator::Iterator::cloned\"><code>Iterator::cloned</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cycle\" class=\"method\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#308-315\">source</a><h4 class=\"code-header\">pub fn <a href=\"nunny/struct.NonEmpty.html#tymethod.cycle\" class=\"fn\">cycle</a>(self) -&gt; <a class=\"struct\" href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\">NonEmpty</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/adapters/cycle/struct.Cycle.html\" title=\"struct core::iter::adapters::cycle::Cycle\">Cycle</a>&lt;I&gt;&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p><a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty</code></a> version of <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#method.cycle\" title=\"method core::iter::traits::iterator::Iterator::cycle\"><code>Iterator::cycle</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.relax\" class=\"method\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#320-322\">source</a><h4 class=\"code-header\">pub fn <a href=\"nunny/struct.NonEmpty.html#tymethod.relax\" class=\"fn\">relax</a>(self) -&gt; I</h4></section></summary><div class=\"docblock\"><p>Remove the <a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty</code></a> wrapper, allowing you to access normal iterator\nmethods like <a href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#method.filter\" title=\"method core::iter::traits::iterator::Iterator::filter\"><code>Iterator::filter</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collect_vec\" class=\"method\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#326-332\">source</a><h4 class=\"code-header\">pub fn <a href=\"nunny/struct.NonEmpty.html#tymethod.collect_vec\" class=\"fn\">collect_vec</a>(self) -&gt; <a class=\"type\" href=\"nunny/type.Vec.html\" title=\"type nunny::Vec\">Vec</a>&lt;I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Collect this iterator into a <a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty&lt;Vec&gt;</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_collect_vec\" class=\"method\"><a class=\"src rightside\" href=\"src/nunny/iter.rs.html#336-348\">source</a><h4 class=\"code-header\">pub fn <a href=\"nunny/struct.NonEmpty.html#tymethod.try_collect_vec\" class=\"fn\">try_collect_vec</a>&lt;T, E&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"type\" href=\"nunny/type.Vec.html\" title=\"type nunny::Vec\">Vec</a>&lt;T&gt;, E&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, E&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Collect <a href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html#variant.Ok\" title=\"variant core::result::Result::Ok\"><code>Ok</code></a> items into a <a href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\"><code>NonEmpty&lt;Vec&gt;</code></a>, short-circuiting on <a href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html#variant.Err\" title=\"variant core::result::Result::Err\"><code>Err</code></a>.</p>\n</div></details></div></details>",0,"nunny::Array","nunny::Slice","nunny::Vec"],["<section id=\"impl-Copy-for-NonEmpty%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nunny/lib.rs.html#118\">source</a><a href=\"#impl-Copy-for-NonEmpty%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\">NonEmpty</a>&lt;T&gt;</h3></section>","Copy","nunny::Array","nunny::Slice","nunny::Vec"],["<section id=\"impl-Eq-for-NonEmpty%3C%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nunny/slice.rs.html#9\">source</a><a href=\"#impl-Eq-for-NonEmpty%3C%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\">NonEmpty</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.slice.html\">[T]</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","nunny::Slice"],["<section id=\"impl-Eq-for-NonEmpty%3C%5BT;+N%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nunny/array.rs.html#8\">source</a><a href=\"#impl-Eq-for-NonEmpty%3C%5BT;+N%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\">NonEmpty</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.array.html\">[T; N]</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","nunny::Array"],["<section id=\"impl-Eq-for-NonEmpty%3CVec%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nunny/vec.rs.html#11\">source</a><a href=\"#impl-Eq-for-NonEmpty%3CVec%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"nunny/struct.NonEmpty.html\" title=\"struct nunny::NonEmpty\">NonEmpty</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","nunny::Vec"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()