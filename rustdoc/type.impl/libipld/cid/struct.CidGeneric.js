(function() {var type_impls = {
"libipld":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arbitrary%3C'a%3E-for-CidGeneric%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cid/arb.rs.html#57\">source</a><a href=\"#impl-Arbitrary%3C'a%3E-for-CidGeneric%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, const S: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"arbitrary/trait.Arbitrary.html\" title=\"trait arbitrary::Arbitrary\">Arbitrary</a>&lt;'a&gt; for <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cid/arb.rs.html#58\">source</a><a href=\"#method.arbitrary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arbitrary/trait.Arbitrary.html#tymethod.arbitrary\" class=\"fn\">arbitrary</a>(u: &amp;mut <a class=\"struct\" href=\"arbitrary/unstructured/struct.Unstructured.html\" title=\"struct arbitrary::unstructured::Unstructured\">Unstructured</a>&lt;'a&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;, <a class=\"enum\" href=\"arbitrary/error/enum.Error.html\" title=\"enum arbitrary::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Generate an arbitrary value of <code>Self</code> from the given unstructured data. <a href=\"arbitrary/trait.Arbitrary.html#tymethod.arbitrary\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cid/arb.rs.html#85\">source</a><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arbitrary/trait.Arbitrary.html#method.size_hint\" class=\"fn\">size_hint</a>(depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><div class='docblock'>Get a size hint for how many bytes out of an <code>Unstructured</code> this type\nneeds to construct itself. <a href=\"arbitrary/trait.Arbitrary.html#method.size_hint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary_take_rest\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arbitrary/lib.rs.html#189\">source</a><a href=\"#method.arbitrary_take_rest\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arbitrary/trait.Arbitrary.html#method.arbitrary_take_rest\" class=\"fn\">arbitrary_take_rest</a>(u: <a class=\"struct\" href=\"arbitrary/unstructured/struct.Unstructured.html\" title=\"struct arbitrary::unstructured::Unstructured\">Unstructured</a>&lt;'a&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"arbitrary/error/enum.Error.html\" title=\"enum arbitrary::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Generate an arbitrary value of <code>Self</code> from the entirety of the given\nunstructured data. <a href=\"arbitrary/trait.Arbitrary.html#method.arbitrary_take_rest\">Read more</a></div></details></div></details>","Arbitrary<'a>","libipld::cid::Cid"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arbitrary-for-CidGeneric%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cid/arb.rs.html#24\">source</a><a href=\"#impl-Arbitrary-for-CidGeneric%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const S: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"quickcheck/arbitrary/trait.Arbitrary.html\" title=\"trait quickcheck::arbitrary::Arbitrary\">Arbitrary</a> for <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cid/arb.rs.html#25\">source</a><a href=\"#method.arbitrary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"quickcheck/arbitrary/trait.Arbitrary.html#tymethod.arbitrary\" class=\"fn\">arbitrary</a>(g: &amp;mut <a class=\"struct\" href=\"quickcheck/arbitrary/struct.Gen.html\" title=\"struct quickcheck::arbitrary::Gen\">Gen</a>) -&gt; <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;</h4></section></summary><div class='docblock'>Return an arbitrary value. <a href=\"quickcheck/arbitrary/trait.Arbitrary.html#tymethod.arbitrary\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/quickcheck/arbitrary.rs.html#128\">source</a><a href=\"#method.shrink\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"quickcheck/arbitrary/trait.Arbitrary.html#method.shrink\" class=\"fn\">shrink</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = Self&gt;&gt;</h4></section></summary><div class='docblock'>Return an iterator of values that are smaller than itself. <a href=\"quickcheck/arbitrary/trait.Arbitrary.html#method.shrink\">Read more</a></div></details></div></details>","Arbitrary","libipld::cid::Cid"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CidGeneric%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#76\">source</a><a href=\"#impl-CidGeneric%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const S: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_v0\" class=\"method\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#78\">source</a><h4 class=\"code-header\">pub const fn <a href=\"libipld/cid/struct.CidGeneric.html#tymethod.new_v0\" class=\"fn\">new_v0</a>(hash: <a class=\"struct\" href=\"libipld/cid/multihash/struct.MultihashGeneric.html\" title=\"struct libipld::cid::multihash::MultihashGeneric\">Multihash</a>&lt;S&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;, <a class=\"enum\" href=\"libipld/cid/enum.Error.html\" title=\"enum libipld::cid::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new CIDv0.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_v1\" class=\"method\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#90\">source</a><h4 class=\"code-header\">pub const fn <a href=\"libipld/cid/struct.CidGeneric.html#tymethod.new_v1\" class=\"fn\">new_v1</a>(codec: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u64.html\">u64</a>, hash: <a class=\"struct\" href=\"libipld/cid/multihash/struct.MultihashGeneric.html\" title=\"struct libipld::cid::multihash::MultihashGeneric\">Multihash</a>&lt;S&gt;) -&gt; <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new CIDv1.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#99\">source</a><h4 class=\"code-header\">pub const fn <a href=\"libipld/cid/struct.CidGeneric.html#tymethod.new\" class=\"fn\">new</a>(\n    version: <a class=\"enum\" href=\"libipld/cid/enum.Version.html\" title=\"enum libipld::cid::Version\">Version</a>,\n    codec: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u64.html\">u64</a>,\n    hash: <a class=\"struct\" href=\"libipld/cid/multihash/struct.MultihashGeneric.html\" title=\"struct libipld::cid::multihash::MultihashGeneric\">Multihash</a>&lt;S&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;, <a class=\"enum\" href=\"libipld/cid/enum.Error.html\" title=\"enum libipld::cid::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new CID.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_v1\" class=\"method\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#112\">source</a><h4 class=\"code-header\">pub fn <a href=\"libipld/cid/struct.CidGeneric.html#tymethod.into_v1\" class=\"fn\">into_v1</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;, <a class=\"enum\" href=\"libipld/cid/enum.Error.html\" title=\"enum libipld::cid::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Convert a CIDv0 to a CIDv1. Returns unchanged if already a CIDv1.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.version\" class=\"method\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#125\">source</a><h4 class=\"code-header\">pub const fn <a href=\"libipld/cid/struct.CidGeneric.html#tymethod.version\" class=\"fn\">version</a>(&amp;self) -&gt; <a class=\"enum\" href=\"libipld/cid/enum.Version.html\" title=\"enum libipld::cid::Version\">Version</a></h4></section></summary><div class=\"docblock\"><p>Returns the cid version.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.codec\" class=\"method\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#130\">source</a><h4 class=\"code-header\">pub const fn <a href=\"libipld/cid/struct.CidGeneric.html#tymethod.codec\" class=\"fn\">codec</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the cid codec.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#135\">source</a><h4 class=\"code-header\">pub const fn <a href=\"libipld/cid/struct.CidGeneric.html#tymethod.hash\" class=\"fn\">hash</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"libipld/cid/multihash/struct.MultihashGeneric.html\" title=\"struct libipld::cid::multihash::MultihashGeneric\">Multihash</a>&lt;S&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the cid multihash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#140\">source</a><h4 class=\"code-header\">pub fn <a href=\"libipld/cid/struct.CidGeneric.html#tymethod.read_bytes\" class=\"fn\">read_bytes</a>&lt;R&gt;(r: R) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;, <a class=\"enum\" href=\"libipld/cid/enum.Error.html\" title=\"enum libipld::cid::Error\">Error</a>&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section></summary><div class=\"docblock\"><p>Reads the bytes from a byte stream.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#179\">source</a><h4 class=\"code-header\">pub fn <a href=\"libipld/cid/struct.CidGeneric.html#tymethod.write_bytes\" class=\"fn\">write_bytes</a>&lt;W&gt;(&amp;self, w: W) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"libipld/cid/enum.Error.html\" title=\"enum libipld::cid::Error\">Error</a>&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,</div></h4></section></summary><div class=\"docblock\"><p>Writes the bytes to a byte stream, returns the number of bytes written.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_len\" class=\"method\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#188\">source</a><h4 class=\"code-header\">pub fn <a href=\"libipld/cid/struct.CidGeneric.html#tymethod.encoded_len\" class=\"fn\">encoded_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the length in bytes needed to encode this cid into bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#205\">source</a><h4 class=\"code-header\">pub fn <a href=\"libipld/cid/struct.CidGeneric.html#tymethod.to_bytes\" class=\"fn\">to_bytes</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns the encoded bytes of the <code>Cid</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_string_of_base\" class=\"method\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#240\">source</a><h4 class=\"code-header\">pub fn <a href=\"libipld/cid/struct.CidGeneric.html#tymethod.to_string_of_base\" class=\"fn\">to_string_of_base</a>(&amp;self, base: <a class=\"enum\" href=\"libipld/cid/multibase/enum.Base.html\" title=\"enum libipld::cid::multibase::Base\">Base</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"enum\" href=\"libipld/cid/enum.Error.html\" title=\"enum libipld::cid::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Convert CID into a multibase encoded string</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>cid::Cid;\n<span class=\"kw\">use </span>multibase::Base;\n<span class=\"kw\">use </span>multihash::{Code, MultihashDigest};\n\n<span class=\"kw\">const </span>RAW: u64 = <span class=\"number\">0x55</span>;\n\n<span class=\"kw\">let </span>cid = Cid::new_v1(RAW, Code::Sha2_256.digest(<span class=\"string\">b\"foo\"</span>));\n<span class=\"kw\">let </span>encoded = cid.to_string_of_base(Base::Base64).unwrap();\n<span class=\"macro\">assert_eq!</span>(encoded, <span class=\"string\">\"mAVUSICwmtGto/8aP+ZtFPB0wQTQTQi1wZIO/oPmKXohiZueu\"</span>);</code></pre></div>\n</div></details></div></details>",0,"libipld::cid::Cid"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-CidGeneric%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#64\">source</a><a href=\"#impl-Clone-for-CidGeneric%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const S: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#64\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","libipld::cid::Cid"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-CidGeneric%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#278\">source</a><a href=\"#impl-Debug-for-CidGeneric%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const S: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#279\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","libipld::cid::Cid"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode%3CDagCborCodec%3E-for-CidGeneric%3C64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/libipld_cbor/decode.rs.html#283\">source</a><a href=\"#impl-Decode%3CDagCborCodec%3E-for-CidGeneric%3C64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"libipld/codec/trait.Decode.html\" title=\"trait libipld::codec::Decode\">Decode</a>&lt;<a class=\"struct\" href=\"libipld_cbor/struct.DagCborCodec.html\" title=\"struct libipld_cbor::DagCborCodec\">DagCborCodec</a>&gt; for <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;64&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libipld_cbor/decode.rs.html#284\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libipld/codec/trait.Decode.html#tymethod.decode\" class=\"fn\">decode</a>&lt;R&gt;(_: <a class=\"struct\" href=\"libipld_cbor/struct.DagCborCodec.html\" title=\"struct libipld_cbor::DagCborCodec\">DagCborCodec</a>, r: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;64&gt;, <a class=\"struct\" href=\"libipld/error/struct.Error.html\" title=\"struct libipld::error::Error\">Error</a>&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/std/io/trait.Seek.html\" title=\"trait std::io::Seek\">Seek</a>,</div></h4></section></summary><div class='docblock'>Decode from an <code>impl Read</code>. <a href=\"libipld/codec/trait.Decode.html#tymethod.decode\">Read more</a></div></details></div></details>","Decode<DagCborCodec>","libipld::cid::Cid"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-CidGeneric%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#254\">source</a><a href=\"#impl-Default-for-CidGeneric%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const S: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#255\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.80.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","libipld::cid::Cid"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-CidGeneric%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cid/serde.rs.html#78\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-CidGeneric%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;SIZE&gt;</h3></section></summary><div class=\"docblock\"><p>Deserialize a CID into a newtype struct.</p>\n<p>Deserialize a CID that was serialized as a newtype struct, so that can be identified as a CID.\nIts corresponding Rust type would be:</p>\n<div class=\"example-wrap\"><pre class=\"language-text\"><code>struct $__private__serde__identifier__for__cid(serde_bytes::BytesBuf);\n</code></pre></div></div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cid/serde.rs.html#79-81\">source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;SIZE&gt;, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","libipld::cid::Cid"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-CidGeneric%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#267\">source</a><a href=\"#impl-Display-for-CidGeneric%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const S: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#268\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","libipld::cid::Cid"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode%3CDagCborCodec%3E-for-CidGeneric%3C64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/libipld_cbor/encode.rs.html#217\">source</a><a href=\"#impl-Encode%3CDagCborCodec%3E-for-CidGeneric%3C64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"libipld/codec/trait.Encode.html\" title=\"trait libipld::codec::Encode\">Encode</a>&lt;<a class=\"struct\" href=\"libipld_cbor/struct.DagCborCodec.html\" title=\"struct libipld_cbor::DagCborCodec\">DagCborCodec</a>&gt; for <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;64&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libipld_cbor/encode.rs.html#218\">source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"libipld/codec/trait.Encode.html#tymethod.encode\" class=\"fn\">encode</a>&lt;W&gt;(&amp;self, _: <a class=\"struct\" href=\"libipld_cbor/struct.DagCborCodec.html\" title=\"struct libipld_cbor::DagCborCodec\">DagCborCodec</a>, w: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;mut W</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"libipld/error/struct.Error.html\" title=\"struct libipld::error::Error\">Error</a>&gt;<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,</div></h4></section></summary><div class='docblock'>Encodes into a <code>impl Write</code>. <a href=\"libipld/codec/trait.Encode.html#tymethod.encode\">Read more</a></div></details></div></details>","Encode<DagCborCodec>","libipld::cid::Cid"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26CidGeneric%3CS%3E%3E-for-CidGeneric%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#358\">source</a><a href=\"#impl-From%3C%26CidGeneric%3CS%3E%3E-for-CidGeneric%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const S: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;&gt; for <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#359\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(cid: &amp;<a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;) -&gt; <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&Cid<S>>","libipld::cid::Cid"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-CidGeneric%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#297\">source</a><a href=\"#impl-FromStr-for-CidGeneric%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const S: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"enum\" href=\"libipld/cid/enum.Error.html\" title=\"enum libipld::cid::Error\">Error</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#300\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(cid_str: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;, <a class=\"enum\" href=\"libipld/cid/enum.Error.html\" title=\"enum libipld::cid::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/1.80.0/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","libipld::cid::Cid"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-CidGeneric%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#64\">source</a><a href=\"#impl-Hash-for-CidGeneric%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const S: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#64\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.80.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.80.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.80.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.80.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","libipld::cid::Cid"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-CidGeneric%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#64\">source</a><a href=\"#impl-Ord-for-CidGeneric%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const S: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#64\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#856-858\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#877-879\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#903-906\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","libipld::cid::Cid"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-CidGeneric%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#64\">source</a><a href=\"#impl-PartialEq-for-CidGeneric%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const S: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#64\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","libipld::cid::Cid"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-CidGeneric%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#64\">source</a><a href=\"#impl-PartialOrd-for-CidGeneric%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const S: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#64\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1180\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1198\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1215\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#1233\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","libipld::cid::Cid"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-CidGeneric%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cid/serde.rs.html#28\">source</a><a href=\"#impl-Serialize-for-CidGeneric%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;SIZE&gt;</h3></section></summary><div class=\"docblock\"><p>Serialize a CID into the Serde data model as enum.</p>\n<p>Custom types are not supported by Serde, hence we map a CID into an enum that can be identified\nas a CID by implementations that support CIDs. The corresponding Rust type would be:</p>\n<div class=\"example-wrap\"><pre class=\"language-text\"><code>struct $__private__serde__identifier__for__cid(serde_bytes::BytesBuf);\n</code></pre></div></div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cid/serde.rs.html#29-31\">source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","libipld::cid::Cid"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26%5Bu8%5D%3E-for-CidGeneric%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#350\">source</a><a href=\"#impl-TryFrom%3C%26%5Bu8%5D%3E-for-CidGeneric%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const S: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"libipld/cid/enum.Error.html\" title=\"enum libipld::cid::Error\">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#353\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;, <a class=\"enum\" href=\"libipld/cid/enum.Error.html\" title=\"enum libipld::cid::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&[u8]>","libipld::cid::Cid"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26str%3E-for-CidGeneric%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#315\">source</a><a href=\"#impl-TryFrom%3C%26str%3E-for-CidGeneric%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const S: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"libipld/cid/enum.Error.html\" title=\"enum libipld::cid::Error\">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#318\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(cid_str: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;, <a class=\"enum\" href=\"libipld/cid/enum.Error.html\" title=\"enum libipld::cid::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&str>","libipld::cid::Cid"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CString%3E-for-CidGeneric%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#306\">source</a><a href=\"#impl-TryFrom%3CString%3E-for-CidGeneric%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const S: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"libipld/cid/enum.Error.html\" title=\"enum libipld::cid::Error\">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#309\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(cid_str: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;, <a class=\"enum\" href=\"libipld/cid/enum.Error.html\" title=\"enum libipld::cid::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<String>","libipld::cid::Cid"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CVec%3Cu8%3E%3E-for-CidGeneric%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#342\">source</a><a href=\"#impl-TryFrom%3CVec%3Cu8%3E%3E-for-CidGeneric%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const S: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"libipld/cid/enum.Error.html\" title=\"enum libipld::cid::Error\">Error</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#345\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(bytes: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;, <a class=\"enum\" href=\"libipld/cid/enum.Error.html\" title=\"enum libipld::cid::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<Vec<u8>>","libipld::cid::Cid"],["<section id=\"impl-Copy-for-CidGeneric%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#64\">source</a><a href=\"#impl-Copy-for-CidGeneric%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const S: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;</h3></section>","Copy","libipld::cid::Cid"],["<section id=\"impl-Eq-for-CidGeneric%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#64\">source</a><a href=\"#impl-Eq-for-CidGeneric%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const S: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;</h3></section>","Eq","libipld::cid::Cid"],["<section id=\"impl-StructuralPartialEq-for-CidGeneric%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cid/cid.rs.html#64\">source</a><a href=\"#impl-StructuralPartialEq-for-CidGeneric%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const S: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"libipld/cid/struct.CidGeneric.html\" title=\"struct libipld::cid::CidGeneric\">Cid</a>&lt;S&gt;</h3></section>","StructuralPartialEq","libipld::cid::Cid"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()