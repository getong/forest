(function() {var type_impls = {
"bellperson":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Key%3CG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bellperson/groth16/aggregate/commit.rs.html#39\">source</a><a href=\"#impl-Clone-for-Key%3CG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;G: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"group/prime/trait.PrimeCurveAffine.html\" title=\"trait group::prime::PrimeCurveAffine\">PrimeCurveAffine</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"bellperson/groth16/aggregate/struct.Key.html\" title=\"struct bellperson::groth16::aggregate::Key\">Key</a>&lt;G&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bellperson/groth16/aggregate/commit.rs.html#39\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bellperson/groth16/aggregate/struct.Key.html\" title=\"struct bellperson::groth16::aggregate::Key\">Key</a>&lt;G&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","bellperson::groth16::aggregate::commit::VKey","bellperson::groth16::aggregate::commit::WKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Key%3CG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bellperson/groth16/aggregate/commit.rs.html#39\">source</a><a href=\"#impl-Debug-for-Key%3CG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;G: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"group/prime/trait.PrimeCurveAffine.html\" title=\"trait group::prime::PrimeCurveAffine\">PrimeCurveAffine</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"bellperson/groth16/aggregate/struct.Key.html\" title=\"struct bellperson::groth16::aggregate::Key\">Key</a>&lt;G&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bellperson/groth16/aggregate/commit.rs.html#39\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","bellperson::groth16::aggregate::commit::VKey","bellperson::groth16::aggregate::commit::WKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Key%3CG%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/bellperson/groth16/aggregate/commit.rs.html#56-141\">source</a><a href=\"#impl-Key%3CG%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;G&gt; <a class=\"struct\" href=\"bellperson/groth16/aggregate/struct.Key.html\" title=\"struct bellperson::groth16::aggregate::Key\">Key</a>&lt;G&gt;<div class=\"where\">where\n    G: <a class=\"trait\" href=\"group/prime/trait.PrimeCurveAffine.html\" title=\"trait group::prime::PrimeCurveAffine\">PrimeCurveAffine</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_correct_len\" class=\"method\"><a class=\"src rightside\" href=\"src/bellperson/groth16/aggregate/commit.rs.html#64-66\">source</a><h4 class=\"code-header\">pub fn <a href=\"bellperson/groth16/aggregate/struct.Key.html#tymethod.has_correct_len\" class=\"fn\">has_correct_len</a>(&amp;self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if commitment keys have the exact required length.\nIt is necessary for the IPP scheme to work that commitment\nkey have the exact same number of arguments as the number of proofs to\naggregate.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.scale\" class=\"method\"><a class=\"src rightside\" href=\"src/bellperson/groth16/aggregate/commit.rs.html#70-89\">source</a><h4 class=\"code-header\">pub fn <a href=\"bellperson/groth16/aggregate/struct.Key.html#tymethod.scale\" class=\"fn\">scale</a>(&amp;self, s_vec: &amp;[G::<a class=\"associatedtype\" href=\"group/prime/trait.PrimeCurveAffine.html#associatedtype.Scalar\" title=\"type group::prime::PrimeCurveAffine::Scalar\">Scalar</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"bellperson/enum.SynthesisError.html\" title=\"enum bellperson::SynthesisError\">SynthesisError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns both vectors scaled by the given vector entrywise.\nIn other words, it returns ${v_i^{s_i}}$</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split\" class=\"method\"><a class=\"src rightside\" href=\"src/bellperson/groth16/aggregate/commit.rs.html#92-105\">source</a><h4 class=\"code-header\">pub fn <a href=\"bellperson/groth16/aggregate/struct.Key.html#tymethod.split\" class=\"fn\">split</a>(self, at: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(Self, Self)</a></h4></section></summary><div class=\"docblock\"><p>Returns the left and right commitment key part. It makes copy.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compress\" class=\"method\"><a class=\"src rightside\" href=\"src/bellperson/groth16/aggregate/commit.rs.html#110-133\">source</a><h4 class=\"code-header\">pub fn <a href=\"bellperson/groth16/aggregate/struct.Key.html#tymethod.compress\" class=\"fn\">compress</a>(\n    &amp;self,\n    right: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;Self</a>,\n    scale: &amp;G::<a class=\"associatedtype\" href=\"group/prime/trait.PrimeCurveAffine.html#associatedtype.Scalar\" title=\"type group::prime::PrimeCurveAffine::Scalar\">Scalar</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"bellperson/enum.SynthesisError.html\" title=\"enum bellperson::SynthesisError\">SynthesisError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Takes a left and right commitment key and returns a commitment\nkey $left \\circ right^{scale} = (left_i*right_i^{scale} …)$. This is\nrequired step during GIPA recursion.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.first\" class=\"method\"><a class=\"src rightside\" href=\"src/bellperson/groth16/aggregate/commit.rs.html#138-140\">source</a><h4 class=\"code-header\">pub fn <a href=\"bellperson/groth16/aggregate/struct.Key.html#tymethod.first\" class=\"fn\">first</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(G, G)</a></h4></section></summary><div class=\"docblock\"><p>Returns the first values in the vector of v1 and v2 (respectively\nw1 and w2). When commitment key is of size one, it’s a proxy to get the\nfinal values.</p>\n</div></details></div></details>",0,"bellperson::groth16::aggregate::commit::VKey","bellperson::groth16::aggregate::commit::WKey"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()